// Code generated by protoc-gen-go.
// source: user.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type User struct {
	AccountId   string `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	Email       string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	Opaque      string `protobuf:"bytes,4,opt,name=opaque" json:"opaque,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *User) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *User) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetOpaque() string {
	if m != nil {
		return m.Opaque
	}
	return ""
}

func init() {
	proto.RegisterType((*User)(nil), "pb.User")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 136 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x2d, 0x4e, 0x2d,
	0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0x2a, 0xe3, 0x62, 0x09, 0x2d,
	0x4e, 0x2d, 0x12, 0x92, 0xe5, 0xe2, 0x4a, 0x4c, 0x4e, 0xce, 0x2f, 0xcd, 0x2b, 0x89, 0xcf, 0x4c,
	0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0xe2, 0x84, 0x8a, 0x78, 0xa6, 0x08, 0x29, 0x72, 0xf1,
	0xa4, 0x64, 0x16, 0x17, 0xe4, 0x24, 0x56, 0xc6, 0xe7, 0x25, 0xe6, 0xa6, 0x4a, 0x30, 0x81, 0x15,
	0x70, 0x43, 0xc5, 0xfc, 0x12, 0x73, 0x53, 0x85, 0x44, 0xb8, 0x58, 0x53, 0x73, 0x13, 0x33, 0x73,
	0x24, 0x98, 0xc1, 0x72, 0x10, 0x8e, 0x90, 0x18, 0x17, 0x5b, 0x7e, 0x41, 0x62, 0x61, 0x69, 0xaa,
	0x04, 0x0b, 0x58, 0x18, 0xca, 0x4b, 0x62, 0x03, 0x3b, 0xc1, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff,
	0x28, 0xb3, 0xf8, 0x35, 0x90, 0x00, 0x00, 0x00,
}
